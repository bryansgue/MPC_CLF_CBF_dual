{
    "acados_include_path": "/home/bryansgue/acados/include",
    "acados_lib_path": "/home/bryansgue/acados/lib",
    "code_export_directory": "/home/bryansgue/Doctoral_Research/Python/MPC_CLF_CBF_dual/c_generated_code",
    "constraints": {
        "C": [],
        "C_e": [],
        "D": [],
        "constr_type": "BGH",
        "constr_type_e": "BGH",
        "idxbu": [
            0,
            1,
            2
        ],
        "idxbx": [],
        "idxbx_0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
        ],
        "idxbx_e": [],
        "idxbxe_0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
        ],
        "idxsbu": [],
        "idxsbx": [],
        "idxsbx_e": [],
        "idxsg": [],
        "idxsg_e": [],
        "idxsh": [
            0,
            1
        ],
        "idxsh_e": [],
        "idxsphi": [],
        "idxsphi_e": [],
        "lbu": [
            -8,
            -8,
            -8
        ],
        "lbx": [],
        "lbx_0": [
            1.0,
            1.0,
            5.0,
            1.0,
            0.0,
            0.0,
            0.5,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "lbx_e": [],
        "lg": [],
        "lg_e": [],
        "lh": [
            0,
            0
        ],
        "lh_e": [],
        "lphi": [],
        "lphi_e": [],
        "lsbu": [],
        "lsbx": [],
        "lsbx_e": [],
        "lsg": [],
        "lsg_e": [],
        "lsh": [
            0.0,
            0.0
        ],
        "lsh_e": [],
        "lsphi": [],
        "lsphi_e": [],
        "ubu": [
            8,
            8,
            8
        ],
        "ubx": [],
        "ubx_0": [
            1.0,
            1.0,
            5.0,
            1.0,
            0.0,
            0.0,
            0.5,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "ubx_e": [],
        "ug": [],
        "ug_e": [],
        "uh": [
            1000000000.0,
            1000000000.0
        ],
        "uh_e": [],
        "uphi": [],
        "uphi_e": [],
        "usbu": [],
        "usbx": [],
        "usbx_e": [],
        "usg": [],
        "usg_e": [],
        "ush": [
            0.0,
            0.0
        ],
        "ush_e": [],
        "usphi": [],
        "usphi_e": []
    },
    "cost": {
        "Vu": [],
        "Vu_0": [],
        "Vx": [],
        "Vx_0": [],
        "Vx_e": [],
        "Vz": [],
        "Vz_0": [],
        "W": [],
        "W_0": [],
        "W_e": [],
        "Zl": [
            100.0,
            100.0
        ],
        "Zl_e": [],
        "Zu": [
            100.0,
            100.0
        ],
        "Zu_e": [],
        "cost_ext_fun_type": "casadi",
        "cost_ext_fun_type_0": "casadi",
        "cost_ext_fun_type_e": "casadi",
        "cost_type": "EXTERNAL",
        "cost_type_0": "EXTERNAL",
        "cost_type_e": "EXTERNAL",
        "yref": [],
        "yref_0": [],
        "yref_e": [],
        "zl": [
            1.0,
            1.0
        ],
        "zl_e": [],
        "zu": [
            1.0,
            1.0
        ],
        "zu_e": []
    },
    "cython_include_dirs": [
        "/home/bryansgue/.local/lib/python3.8/site-packages/numpy/core/include",
        "/usr/include/python3.8"
    ],
    "dims": {
        "N": 52,
        "nbu": 3,
        "nbx": 0,
        "nbx_0": 11,
        "nbx_e": 0,
        "nbxe_0": 11,
        "ng": 0,
        "ng_e": 0,
        "nh": 2,
        "nh_e": 0,
        "np": 17,
        "nphi": 0,
        "nphi_e": 0,
        "nr": 0,
        "nr_e": 0,
        "ns": 2,
        "ns_e": 0,
        "nsbu": 0,
        "nsbx": 0,
        "nsbx_e": 0,
        "nsg": 0,
        "nsg_e": 0,
        "nsh": 2,
        "nsh_e": 0,
        "nsphi": 0,
        "nsphi_e": 0,
        "nu": 4,
        "nx": 11,
        "ny": 0,
        "ny_0": 0,
        "ny_e": 0,
        "nz": 0
    },
    "json_file": "acados_ocp_Drone_ode.json",
    "model": {
        "con_h_expr": "@1=(nx-nx_obs), @2=vertsplit(ones(11x1,10nz)){0}, @3=(ny-ny_obs), @4=sqrt((sq(@1)+sq(@3))), @5=(2.*@4), @6=(((2.*@1)*@2)/@5), @7=vertsplit(ones(11x1,1nz)){1}, @8=(((2.*@3)*@7)/@5), @9=((zeros(11x1,2nz)[0] = @6)[1] = @8), @10=vertcat(qw, qx, qy, qz), @11=||@10||_F, @12=(@10/@11), @13=((((((zeros(3x3)[3] = (-@12[3]))[6] = @12[2])[7] = (-@12[1]))[1] = @12[3])[2] = (-@12[2]))[5] = @12[1]), @14=(2.*@13), @15=(2.*@12[0]), @16=0.5, @17=((((((((((((((((zeros(4x4)[0] = 0.6756)[4] = 0)[8] = 0)[12] = 0)[1] = 0)[5] = 0.6344)[9] = 0)[13] = 0)[2] = 0)[6] = 0)[10] = 0.408)[14] = 0)[3] = 0)[7] = 0)[11] = 0)[15] = 0.2953), @18=(@17\\\n[[1, 0, 0, 0], \n [0, 1, 0, 0], \n [0, 0, 1, 0], \n [0, 0, 0, 1]]), @19=-0.8109, @20=0.3984, @21=horzcat(horzcat(zeros(3x7), ((\n[[1, 0, 0], \n [0, 1, 0], \n [0, 0, 1]]+mac(@14,@13,zeros(3x3)))+(@15*@13)), zeros(3x1))', horzcat(zeros(4x3), (@16*horzcat(horzcat(0, 0, 0, (-w))', horzcat(0, 0, w, 0)', horzcat(0, (-w), 0, 0)', horzcat(w, 0, 0, 0)')'), zeros(4x4))', horzcat(zeros(4x7), (-mac(@18,((((((((((((((((zeros(4x4)[0] = 0.5941)[4] = (@19*w))[8] = 0)[12] = 0)[1] = (@20*w))[5] = 0.704)[9] = 0)[13] = 0)[2] = 0)[6] = 0)[10] = 0.9365)[14] = 0)[3] = 0)[7] = 0)[11] = 0)[15] = 0.9752),zeros(4x4))))'), @22=vertcat(nx, ny, nz, qw, qx, qy, qz, ul, um, un, w), @23=horzcat(zeros(4x7), (@17\\\n[[1, 0, 0, 0], \n [0, 1, 0, 0], \n [0, 0, 1, 0], \n [0, 0, 0, 1]])')', @24=vertcat(ul_ref, um_ref, un_ref, w_ref), @25=(mac(@21',@22,zeros(11x1))+mac(@23,@24,zeros(11x1))), @26=mac(@9',@25,0), @27=(2.*@4), @28=((((zeros(4x11)[:44:4] = mac(@23,vertcat(vertsplit(ones(4x1,1nz)){0}, 00, 00, 00),zeros(11x1)))[1:45:4] = mac(@23,vertcat(00, vertsplit(ones(4x1,1nz)){1}, 00, 00),zeros(11x1)))[2:46:4] = mac(@23,vertcat(00, 00, vertsplit(ones(4x1,1nz)){2}, 00),zeros(11x1)))[3:47:4] = mac(@23,vertcat(00, 00, 00, vertsplit(ones(4x1,1nz)){3}),zeros(11x1)))', @29=(@4-0.8), @30=dense(@9), @31=vertsplit(mac(@21,@30,zeros(11x1))), @32=(@25[1] = 0)[0], @33=@25[1], @34=((2.*((-((@6/@5)*@32))-((@8/@5)*@33)))/(2.*@4)), @35=horzsplit(mac(@30,@22',zeros(11x11))'), @36=horzsplit(@35{0}'){1}, @37=(((@15*@36)+mac(@14',@36,zeros(3x3)))+(2.*mac(@36,@13',zeros(3x3)))), @38=(@37[5] = 0), @39=(@38[2] = 0), @40=(@39[1] = 0), @41=(@40[7] = 0), @42=(((((((zeros(4x1)[0] += (2.*dot(@13, @36)))[1] += @37[5])[2] += (-@38[2]))[3] += @39[1])[1] += (-@40[7]))[2] += @41[6])[3] += (-(@41[6] = 0)[3])), @43=vertsplit(((@42/@11)+((dot((-(@12/@11)), @42)/@11)*@10))), @44=(((((((((((mac(@18',(-horzsplit(@35{2}'){1}),zeros(4x4))[15] = 0)[11] = 0)[7] = 0)[3] = 0)[14] = 0)[10] = 0)[6] = 0)[2] = 0)[13] = 0)[9] = 0)[5] = 0), @45=horzsplit((@16*horzsplit(@35{1}'){1})'), @46=dense(@9), @47=vertsplit(mac(@21,@46,zeros(11x1))), @48=(@25[1] = 0)[0], @49=@25[1], @50=((2.*((-((@6/@5)*@48))-((@8/@5)*@49)))/(2.*@4)), @51=horzsplit(mac(@46,@22',zeros(11x11))'), @52=horzsplit(@51{0}'){1}, @53=(((@15*@52)+mac(@14',@52,zeros(3x3)))+(2.*mac(@52,@13',zeros(3x3)))), @54=(@53[5] = 0), @55=(@54[2] = 0), @56=(@55[1] = 0), @57=(@56[7] = 0), @58=(((((((zeros(4x1)[0] += (2.*dot(@13, @52)))[1] += @53[5])[2] += (-@54[2]))[3] += @55[1])[1] += (-@56[7]))[2] += @57[6])[3] += (-(@57[6] = 0)[3])), @59=vertsplit(((@58/@11)+((dot((-(@12/@11)), @58)/@11)*@10))), @60=(((((((((((mac(@18',(-horzsplit(@51{2}'){1}),zeros(4x4))[15] = 0)[11] = 0)[7] = 0)[3] = 0)[14] = 0)[10] = 0)[6] = 0)[2] = 0)[13] = 0)[9] = 0)[5] = 0), @61=horzsplit((@16*horzsplit(@51{1}'){1})'), vertcat(((@26+mac(mac(((zeros(11x1,2nz)[0] = (((2.*@1)*vertsplit(ones(11x1,10nz)){0})/@27))[1] = (((2.*@3)*vertsplit(ones(11x1,1nz)){1})/@27))',@28,zeros(1x4)),@24,0))+(5*@29)), ((mac((((((((((((zeros(11x1)[0] = (@31{0}+(((2.*@1)*@34)+(2.*(@2*(@32/@5))))))[1] = (@31{1}+((2.*(@7*(@33/@5)))+((2.*@3)*@34))))[2] = @31{2})[3] = (@31{3}+@43{0}))[4] = (@31{4}+@43{1}))[5] = (@31{5}+@43{2}))[6] = (@31{6}+@43{3}))[7] = @31{7})[8] = @31{8})[9] = @31{9})[10] = ((((((@31{10}+(@20*@44[1]))+(@19*(((@44[1] = 0)[12] = 0)[8] = 0)[4]))+horzsplit(@45{3}'){0})-horzsplit(@45{2}'){1})+horzsplit(@45{1}'){2})-horzsplit(@45{0}'){3}))',@25,0)+mac(mac((((((((((((zeros(11x1)[0] = (@47{0}+(((2.*@1)*@50)+(2.*(@2*(@48/@5))))))[1] = (@47{1}+((2.*(@7*(@49/@5)))+((2.*@3)*@50))))[2] = @47{2})[3] = (@47{3}+@59{0}))[4] = (@47{4}+@59{1}))[5] = (@47{5}+@59{2}))[6] = (@47{6}+@59{3}))[7] = @47{7})[8] = @47{8})[9] = @47{9})[10] = ((((((@47{10}+(@20*@60[1]))+(@19*(((@60[1] = 0)[12] = 0)[8] = 0)[4]))+horzsplit(@61{3}'){0})-horzsplit(@61{2}'){1})+horzsplit(@61{1}'){2})-horzsplit(@61{0}'){3}))',@28,zeros(1x4)),@24,0))+mac(all_10(1x2),vertcat(@29, @26),0)))",
        "con_h_expr_e": null,
        "con_phi_expr": null,
        "con_phi_expr_e": null,
        "con_r_expr": null,
        "con_r_expr_e": null,
        "con_r_in_phi": null,
        "con_r_in_phi_e": null,
        "cost_conl_custom_outer_hess": null,
        "cost_conl_custom_outer_hess_0": null,
        "cost_conl_custom_outer_hess_e": null,
        "cost_expr_ext_cost": "@1=vertcat(nx_d, ny_d, nz_d, qw_d, qx_d, qy_d, qz_d, ul_d, um_d, un_d, w_d, ul_ref_d, um_ref_d, un_ref_d, w_ref_d, nx_obs, ny_obs), @2=(@1[:3]-vertcat(nx, ny, nz, qw, qx, qy, qz, ul, um, un, w)[:3]), @3=vertcat(ul_ref, um_ref, un_ref, w_ref), @4=(vertcat(qw_d, (-qx_d), (-qy_d), (-qz_d))/||@1[3:7]||_F), @5=@4[0], @6=@4[1], @7=@4[2], @8=@4[3], @9=((((@5*qw)-(@6*qx))-(@7*qy))-(@8*qz)), @10=vertcat(@9, ((((@5*qx)+(@6*qw))+(@7*qz))-(@8*qy)), ((((@5*qy)-(@6*qz))+(@7*qw))+(@8*qx)), ((((@5*qz)+(@6*qy))-(@7*qx))+(@8*qw))), (((mac(mac(@2',(((zeros(3x3)[0] = 2.1)[4] = 2.1)[8] = 2.1),zeros(1x3)),@2,0)+mac(mac(@3',((((zeros(4x4)[0] = 1)[5] = 1)[10] = 1)[15] = 1),zeros(1x4)),@3,0))+(1-@9))+mac((7*@10[1:4]'),@10[1:4],0))",
        "cost_expr_ext_cost_0": "@1=vertcat(nx_d, ny_d, nz_d, qw_d, qx_d, qy_d, qz_d, ul_d, um_d, un_d, w_d, ul_ref_d, um_ref_d, un_ref_d, w_ref_d, nx_obs, ny_obs), @2=(@1[:3]-vertcat(nx, ny, nz, qw, qx, qy, qz, ul, um, un, w)[:3]), @3=vertcat(ul_ref, um_ref, un_ref, w_ref), @4=(vertcat(qw_d, (-qx_d), (-qy_d), (-qz_d))/||@1[3:7]||_F), @5=@4[0], @6=@4[1], @7=@4[2], @8=@4[3], @9=((((@5*qw)-(@6*qx))-(@7*qy))-(@8*qz)), @10=vertcat(@9, ((((@5*qx)+(@6*qw))+(@7*qz))-(@8*qy)), ((((@5*qy)-(@6*qz))+(@7*qw))+(@8*qx)), ((((@5*qz)+(@6*qy))-(@7*qx))+(@8*qw))), (((mac(mac(@2',(((zeros(3x3)[0] = 2.1)[4] = 2.1)[8] = 2.1),zeros(1x3)),@2,0)+mac(mac(@3',((((zeros(4x4)[0] = 1)[5] = 1)[10] = 1)[15] = 1),zeros(1x4)),@3,0))+(1-@9))+mac((7*@10[1:4]'),@10[1:4],0))",
        "cost_expr_ext_cost_custom_hess": null,
        "cost_expr_ext_cost_custom_hess_0": null,
        "cost_expr_ext_cost_custom_hess_e": null,
        "cost_expr_ext_cost_e": "@1=vertcat(nx_d, ny_d, nz_d, qw_d, qx_d, qy_d, qz_d, ul_d, um_d, un_d, w_d, ul_ref_d, um_ref_d, un_ref_d, w_ref_d, nx_obs, ny_obs), @2=(@1[:3]-vertcat(nx, ny, nz, qw, qx, qy, qz, ul, um, un, w)[:3]), @3=(vertcat(qw_d, (-qx_d), (-qy_d), (-qz_d))/||@1[3:7]||_F), @4=@3[0], @5=@3[1], @6=@3[2], @7=@3[3], @8=((((@4*qw)-(@5*qx))-(@6*qy))-(@7*qz)), @9=vertcat(@8, ((((@4*qx)+(@5*qw))+(@6*qz))-(@7*qy)), ((((@4*qy)-(@5*qz))+(@6*qw))+(@7*qx)), ((((@4*qz)+(@5*qy))-(@6*qx))+(@7*qw))), ((mac(mac(@2',(((zeros(3x3)[0] = 2.1)[4] = 2.1)[8] = 2.1),zeros(1x3)),@2,0)+(1-@8))+mac((7*@9[1:4]'),@9[1:4],0))",
        "cost_psi_expr": null,
        "cost_psi_expr_0": null,
        "cost_psi_expr_e": null,
        "cost_r_in_psi_expr": null,
        "cost_r_in_psi_expr_0": null,
        "cost_r_in_psi_expr_e": null,
        "cost_y_expr": null,
        "cost_y_expr_0": null,
        "cost_y_expr_e": null,
        "disc_dyn_expr": null,
        "dyn_disc_fun": null,
        "dyn_disc_fun_jac": null,
        "dyn_disc_fun_jac_hess": null,
        "dyn_ext_fun_type": "casadi",
        "dyn_generic_source": null,
        "f_expl_expr": "@1=vertcat(qw, qx, qy, qz), @2=(@1/||@1||_F), @3=((((((zeros(3x3)[3] = (-@2[3]))[6] = @2[2])[7] = (-@2[1]))[1] = @2[3])[2] = (-@2[2]))[5] = @2[1]), @4=((((((((((((((((zeros(4x4)[0] = 0.6756)[4] = 0)[8] = 0)[12] = 0)[1] = 0)[5] = 0.6344)[9] = 0)[13] = 0)[2] = 0)[6] = 0)[10] = 0.408)[14] = 0)[3] = 0)[7] = 0)[11] = 0)[15] = 0.2953), (mac(horzcat(horzcat(zeros(3x7), ((\n[[1, 0, 0], \n [0, 1, 0], \n [0, 0, 1]]+mac((2.*@3),@3,zeros(3x3)))+((2.*@2[0])*@3)), zeros(3x1))', horzcat(zeros(4x3), (0.5*horzcat(horzcat(0, 0, 0, (-w))', horzcat(0, 0, w, 0)', horzcat(0, (-w), 0, 0)', horzcat(w, 0, 0, 0)')'), zeros(4x4))', horzcat(zeros(4x7), (-mac((@4\\\n[[1, 0, 0, 0], \n [0, 1, 0, 0], \n [0, 0, 1, 0], \n [0, 0, 0, 1]]),((((((((((((((((zeros(4x4)[0] = 0.5941)[4] = (-0.8109*w))[8] = 0)[12] = 0)[1] = (0.3984*w))[5] = 0.704)[9] = 0)[13] = 0)[2] = 0)[6] = 0)[10] = 0.9365)[14] = 0)[3] = 0)[7] = 0)[11] = 0)[15] = 0.9752),zeros(4x4))))')',vertcat(nx, ny, nz, qw, qx, qy, qz, ul, um, un, w),zeros(11x1))+mac(horzcat(zeros(4x7), (@4\\\n[[1, 0, 0, 0], \n [0, 1, 0, 0], \n [0, 0, 1, 0], \n [0, 0, 0, 1]])')',vertcat(ul_ref, um_ref, un_ref, w_ref),zeros(11x1)))",
        "f_impl_expr": "@1=vertcat(qw, qx, qy, qz), @2=(@1/||@1||_F), @3=((((((zeros(3x3)[3] = (-@2[3]))[6] = @2[2])[7] = (-@2[1]))[1] = @2[3])[2] = (-@2[2]))[5] = @2[1]), @4=((((((((((((((((zeros(4x4)[0] = 0.6756)[4] = 0)[8] = 0)[12] = 0)[1] = 0)[5] = 0.6344)[9] = 0)[13] = 0)[2] = 0)[6] = 0)[10] = 0.408)[14] = 0)[3] = 0)[7] = 0)[11] = 0)[15] = 0.2953), (vertcat(nx_p, ny_p, nz_p, qw_p, qx_p, qy_p, qz_p, ul_p, um_p, un_p, w_p)-(mac(horzcat(horzcat(zeros(3x7), ((\n[[1, 0, 0], \n [0, 1, 0], \n [0, 0, 1]]+mac((2.*@3),@3,zeros(3x3)))+((2.*@2[0])*@3)), zeros(3x1))', horzcat(zeros(4x3), (0.5*horzcat(horzcat(0, 0, 0, (-w))', horzcat(0, 0, w, 0)', horzcat(0, (-w), 0, 0)', horzcat(w, 0, 0, 0)')'), zeros(4x4))', horzcat(zeros(4x7), (-mac((@4\\\n[[1, 0, 0, 0], \n [0, 1, 0, 0], \n [0, 0, 1, 0], \n [0, 0, 0, 1]]),((((((((((((((((zeros(4x4)[0] = 0.5941)[4] = (-0.8109*w))[8] = 0)[12] = 0)[1] = (0.3984*w))[5] = 0.704)[9] = 0)[13] = 0)[2] = 0)[6] = 0)[10] = 0.9365)[14] = 0)[3] = 0)[7] = 0)[11] = 0)[15] = 0.9752),zeros(4x4))))')',vertcat(nx, ny, nz, qw, qx, qy, qz, ul, um, un, w),zeros(11x1))+mac(horzcat(zeros(4x7), (@4\\\n[[1, 0, 0, 0], \n [0, 1, 0, 0], \n [0, 0, 1, 0], \n [0, 0, 0, 1]])')',vertcat(ul_ref, um_ref, un_ref, w_ref),zeros(11x1))))",
        "gnsf": {
            "nontrivial_f_LO": 1,
            "purely_linear": 0
        },
        "name": "Drone_ode",
        "p": "vertcat(nx_d, ny_d, nz_d, qw_d, qx_d, qy_d, qz_d, ul_d, um_d, un_d, w_d, ul_ref_d, um_ref_d, un_ref_d, w_ref_d, nx_obs, ny_obs)",
        "u": "vertcat(ul_ref, um_ref, un_ref, w_ref)",
        "x": "vertcat(nx, ny, nz, qw, qx, qy, qz, ul, um, un, w)",
        "xdot": "vertcat(nx_p, ny_p, nz_p, qw_p, qx_p, qy_p, qz_p, ul_p, um_p, un_p, w_p)",
        "z": "0x0"
    },
    "p": "vertcat(nx_d, ny_d, nz_d, qw_d, qx_d, qy_d, qz_d, ul_d, um_d, un_d, w_d, ul_ref_d, um_ref_d, un_ref_d, w_ref_d, nx_obs, ny_obs)",
    "parameter_values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
    ],
    "problem_class": "OCP",
    "shared_lib_ext": ".so",
    "solver_options": {
        "Tsim": 0.032051282051282055,
        "alpha_min": 0.05,
        "alpha_reduction": 0.7,
        "collocation_type": "GAUSS_LEGENDRE",
        "custom_update_filename": "",
        "custom_update_header_filename": "",
        "eps_sufficient_descent": 0.0001,
        "exact_hess_constr": 1,
        "exact_hess_cost": 1,
        "exact_hess_dyn": 1,
        "ext_cost_num_hess": 0,
        "ext_fun_compile_flags": "-O2",
        "full_step_dual": 0,
        "globalization": "FIXED_STEP",
        "globalization_use_SOC": 0,
        "hessian_approx": "GAUSS_NEWTON",
        "hpipm_mode": "BALANCE",
        "initialize_t_slacks": 0,
        "integrator_type": "ERK",
        "levenberg_marquardt": 0.0,
        "line_search_use_sufficient_descent": 0,
        "model_external_shared_lib_dir": null,
        "model_external_shared_lib_name": null,
        "nlp_solver_ext_qp_res": 0,
        "nlp_solver_max_iter": 100,
        "nlp_solver_step_length": 1.0,
        "nlp_solver_tol_comp": 1e-06,
        "nlp_solver_tol_eq": 1e-06,
        "nlp_solver_tol_ineq": 1e-06,
        "nlp_solver_tol_stat": 1e-06,
        "nlp_solver_type": "SQP_RTI",
        "print_level": 0,
        "qp_solver": "FULL_CONDENSING_HPIPM",
        "qp_solver_cond_N": null,
        "qp_solver_cond_ric_alg": 1,
        "qp_solver_iter_max": 50,
        "qp_solver_ric_alg": 1,
        "qp_solver_tol_comp": null,
        "qp_solver_tol_eq": null,
        "qp_solver_tol_ineq": null,
        "qp_solver_tol_stat": null,
        "qp_solver_warm_start": 0,
        "regularize_method": null,
        "shooting_nodes": null,
        "sim_method_jac_reuse": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "sim_method_newton_iter": 3,
        "sim_method_newton_tol": 0.0,
        "sim_method_num_stages": [
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4
        ],
        "sim_method_num_steps": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        "tf": 1.6666666666666667,
        "time_steps": [
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055,
            0.032051282051282055
        ]
    }
}